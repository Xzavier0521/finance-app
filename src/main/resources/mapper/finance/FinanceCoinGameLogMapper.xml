<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="finance.core.dal.dao.FinanceCoinGameLogDAO" >
  <resultMap id="BaseResultMap" type="finance.core.dal.dataobject.FinanceCoinGameLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="out_num" property="outNum" jdbcType="INTEGER" />
    <result column="in_num" property="inNum" jdbcType="INTEGER" />
    <result column="join_date" property="joinDate" jdbcType="DATE" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="sign_time" property="signTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="clock_count" property="clockCount" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, out_num, in_num, join_date, join_time, sign_time, `status`, clock_count, 
    is_delete, creator, updator, version, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from finance_coin_game_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insertSelective" parameterType="finance.core.dal.dataobject.FinanceCoinGameLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into finance_coin_game_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="outNum != null" >
        out_num,
      </if>
      <if test="inNum != null" >
        in_num,
      </if>
      <if test="joinDate != null" >
        join_date,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
      <if test="signTime != null" >
        sign_time,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="clockCount != null" >
        clock_count,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updator != null" >
        updator,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="outNum != null" >
        #{outNum,jdbcType=INTEGER},
      </if>
      <if test="inNum != null" >
        #{inNum,jdbcType=INTEGER},
      </if>
      <if test="joinDate != null" >
        #{joinDate,jdbcType=DATE},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null" >
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="clockCount != null" >
        #{clockCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="finance.core.dal.dataobject.FinanceCoinGameLog" >
    update finance_coin_game_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="outNum != null" >
        out_num = #{outNum,jdbcType=INTEGER},
      </if>
      <if test="inNum != null" >
        in_num = #{inNum,jdbcType=INTEGER},
      </if>
      <if test="joinDate != null" >
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null" >
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="clockCount != null" >
        clock_count = #{clockCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByCurrentDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from finance_coin_game_log
    where 1=1
    <if test="userId != null and userId !=''">
      and user_id = #{userId,jdbcType=BIGINT}
    </if>
    <if test="isJoinDate != null and isJoinDate !=''">
      and join_date = CURDATE()
    </if>
    <if test="isYesJoinDate != null and isYesJoinDate !=''">
      and join_date = DATE_SUB( CURDATE( ), INTERVAL + 1 DAY )
    </if>
    <if test="isClockDate != null and isClockDate !=''" >
      and date(sign_time) = CURDATE()
    </if>
  </select>

  <resultMap id="JoinResultMap" type="finance.api.model.vo.JoinTaskBaseVO" >
    <result column="totalJoinNum" property="totalJoinNum" jdbcType="BIGINT" />
    <result column="totalCoinNum" property="totalCoinNum" jdbcType="BIGINT" />
  </resultMap>
  <select id="selectAllDataByCurrentDay" resultMap="JoinResultMap">
    SELECT
    count(id) totalJoinNum,
    sum(out_num) totalCoinNum
    FROM
    finance_coin_game_log
    WHERE
    join_date = CURDATE()
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from finance_coin_game_log
    where  date(sign_time) = CURDATE()
    <if test="signDate != null and signDate !=''" >
      ORDER BY sign_time
      limit 1
    </if>
    <if test="inNum != null and inNum !=''" >
      ORDER BY in_num DESC
      limit 1
    </if>
    <if test="clockCount != null and clockCount !=''" >
      ORDER BY clock_count DESC
      limit 1
    </if>
  </select>

  <select id="selectByYesterdayDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from finance_coin_game_log
    where
    join_date = DATE_SUB( CURDATE( ), INTERVAL + 1 DAY )
  </select>

  <resultMap id="RecordResultMap" type="finance.api.model.vo.MyRecordVO" >
    <result column="totalOutCoin" property="totalOutCoin" jdbcType="INTEGER" />
    <result column="totalInCoin" property="totalInCoin" jdbcType="INTEGER" />
    <result column="totalSign" property="totalSign" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectMyRecordTotalData" resultMap="RecordResultMap">
    SELECT
    sum(out_num) totalOutCoin,
    sum(in_num) totalInCoin,
    sum(STATUS)  totalSign
    FROM
    finance_coin_game_log
    WHERE
    user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectByUserIdAndYesterdayDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from finance_coin_game_log
    where
    user_id = #{userId,jdbcType=BIGINT}
    and date(sign_time) = DATE_SUB( CURDATE( ), INTERVAL + 1 DAY )
  </select>

  <update id="updateByUserIdAndDateSelective" parameterType="finance.core.dal.dataobject.FinanceCoinGameLog" >
    update finance_coin_game_log
    <set >
      <if test="outNum != null" >
        out_num = #{outNum,jdbcType=INTEGER},
      </if>
      <if test="inNum != null" >
        in_num = #{inNum,jdbcType=INTEGER},
      </if>
      <if test="joinDate != null" >
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null" >
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="clockCount != null" >
        clock_count = #{clockCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
    and join_date = DATE_SUB( CURDATE( ), INTERVAL + 1 DAY )
  </update>
  <select id="selectSignByFirst" resultType="java.lang.Integer">
    SELECT
    count( user_id )
    FROM
    finance_coin_game_log
    WHERE
    sign_time IS NOT NULL
    AND `status` = 1
    AND user_id = #{userId}
  </select>
</mapper>