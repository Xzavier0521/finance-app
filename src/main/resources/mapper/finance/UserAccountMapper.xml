<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zhishush.finance.core.dal.dao.account.UserAccountDAO">
    <resultMap id="BaseResultMap" type="cn.zhishush.finance.core.dal.dataobject.account.UserAccountDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="can_withdraw_money" property="canWithdrawMoney" jdbcType="DECIMAL"/>
        <result column="withdrawed_money" property="withdrawedMoney" jdbcType="DECIMAL"/>
        <result column="income_money" property="incomeMoney" jdbcType="DECIMAL"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="is_flag" property="isFlag" jdbcType="VARCHAR"/>
        <result column="sum_charge_money" property="sumChargeMoney" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, can_withdraw_money, withdrawed_money, income_money, user_name, `status`,
        create_time, update_time, version, is_flag, sum_charge_money
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_user_account
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertSelective" parameterType="cn.zhishush.finance.core.dal.dataobject.account.UserAccountDO">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into finance_user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="canWithdrawMoney != null">
                can_withdraw_money,
            </if>
            <if test="withdrawedMoney != null">
                withdrawed_money,
            </if>
            <if test="incomeMoney != null">
                income_money,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="sumChargeMoney != null">
                sum_charge_money,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="canWithdrawMoney != null">
                #{canWithdrawMoney,jdbcType=DECIMAL},
            </if>
            <if test="withdrawedMoney != null">
                #{withdrawedMoney,jdbcType=DECIMAL},
            </if>
            <if test="incomeMoney != null">
                #{incomeMoney,jdbcType=DECIMAL},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="isFlag != null">
                #{isFlag,jdbcType=VARCHAR},
            </if>
            <if test="sumChargeMoney != null">
                #{sumChargeMoney,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.zhishush.finance.core.dal.dataobject.account.UserAccountDO">
        update finance_user_account
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="canWithdrawMoney != null">
                can_withdraw_money = #{canWithdrawMoney,jdbcType=DECIMAL},
            </if>
            <if test="withdrawedMoney != null">
                withdrawed_money = #{withdrawedMoney,jdbcType=DECIMAL},
            </if>
            <if test="incomeMoney != null">
                income_money = #{incomeMoney,jdbcType=DECIMAL},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="isFlag != null">
                is_flag = #{isFlag,jdbcType=VARCHAR},
            </if>
            <if test="sumChargeMoney != null">
                sum_charge_money = #{sumChargeMoney,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="countDownMoney">
        update finance_user_account set can_withdraw_money = can_withdraw_money - #{money,jdbcType=DECIMAL}, version
        =version +1
        where user_id = #{userId,jdbcType=BIGINT} and can_withdraw_money &gt;= #{money,jdbcType=DECIMAL}
    </update>

    <update id="chargeMoney">
        update finance_user_account set sum_charge_money = sum_charge_money +
        #{money,jdbcType=DECIMAL},can_withdraw_money = can_withdraw_money + #{money,jdbcType=DECIMAL},version = version
        +1
        where user_id = #{userId,jdbcType=BIGINT}
    </update>

    <select id="getAccountByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_user_account
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from finance_user_account
        <include refid="queryCondition"/>
        <include refid="base.limit"/>
    </select>
    <sql id="queryCondition">
        <trim prefix="where" prefixOverrides="AND| OR">
            <if test="userId !=null">
                and userId= #{userId}
            </if>
            <if test="userIds != null">
                and user_id in
                <foreach item="userId" collection="userIds" open="(" close=")" separator=",">
                    #{userId,jdbcType=BIGINT}
                </foreach>
            </if>
        </trim>
    </sql>
</mapper>