<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="finance.core.dal.dao.CoinLogDAO">
    <resultMap id="BaseResultMap" type="finance.core.dal.dataobject.CoinLogDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="updator" property="updator" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, task_id, task_name, num, is_delete, creator, updator, version, create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertSelective" parameterType="finance.core.dal.dataobject.CoinLogDO">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into finance_coin_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="updator != null">
                updator,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=BIGINT},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updator != null">
                #{updator,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="finance.core.dal.dataobject.CoinLogDO">
        update finance_coin_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=BIGINT},
            </if>
            <if test="taskName != null">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updator != null">
                updator = #{updator,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log
        where user_id = #{userId,jdbcType=BIGINT}
        and task_id = #{taskId,jdbcType=BIGINT}
        ORDER BY id DESC
        <include refid="base.limit"/>
    </select>

    <select id="selectCoinNumByUserId" resultType="java.lang.Integer">
        SELECT
        sum(num)
        FROM
        finance_coin_log where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectByUserIdAndTaskId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log
        where user_id = #{userId,jdbcType=BIGINT}
        and task_id = #{taskId,jdbcType=BIGINT}
        ORDER BY id DESC
    </select>

    <select id="selectYesAndToDatClockByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log
        where user_id = #{userId,jdbcType=BIGINT}
        and task_id = #{taskId,jdbcType=BIGINT}
        <if test="yesterdayType != null and yesterdayType !=''">
            and date(create_time) = DATE_SUB( CURDATE( ), INTERVAL + 1 DAY )
        </if>
        <if test="todayType != null and todayType !=''">
            and date(create_time) = CURDATE( )
        </if>
    </select>
    <select id="selectTotalGetCoinNumByUserId" resultType="java.lang.Integer">
        SELECT
        sum(num)
        FROM
        finance_coin_log where user_id = #{userId,jdbcType=BIGINT} and num >=0
    </select>

    <select id="queryUserCoinRecordsByType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log
        where user_id = #{userId,jdbcType=BIGINT}
        <if test="paramType == 'in'">
            and num >=0
        </if>
        <if test="paramType == 'out'">
            and num &lt; 0
        </if>
        ORDER BY id DESC
        <include refid="base.limit"/>
    </select>
    <select id="queryLatestLog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from finance_coin_log b
        where
        exists (
        select 1 from (
        select max(id) as id from finance_coin_log
        where user_id in
        <foreach item="userId" collection="userIds" open="(" close=")" separator=",">
            #{userId,jdbcType=BIGINT}
        </foreach>
        GROUP BY user_id
        ) a where a.id = b.id
        )
    </select>
    <select id="selectSignCoinRewardByUid" resultType="finance.api.model.vo.coin.PushRewardVO">
        SELECT
        fcl.num rewardCoin,
        fcg.num signCoin
        FROM
        finance_coin_log fcl
        LEFT JOIN finance_coin_game fcg ON fcl.task_id = fcg.id
        WHERE
        fcl.user_id = #{userId}
        AND fcg.task_type = #{taskType}
        AND fcg.game_type = #{gameType}
        AND date( fcl.create_time ) = CURDATE( )
    </select>
</mapper>