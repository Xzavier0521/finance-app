<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zhishush.finance.core.dal.dao.user.UserInviteInfoDAO">
    <resultMap id="BaseResultMap" type="cn.zhishush.finance.core.dal.dataobject.user.UserInviteInfoDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="parent_user_id" property="parentUserId" jdbcType="BIGINT"/>
        <result column="invite_type" property="inviteType" jdbcType="INTEGER"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="is_pay_coin" property="isPayCoin" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="updator" property="updator" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, parent_user_id, invite_type, is_delete,is_pay_coin, creator, updator, version, create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from finance_user_invite_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertSelective" parameterType="cn.zhishush.finance.core.dal.dataobject.user.UserInviteInfoDO">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into finance_user_invite_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="parentUserId != null">
                parent_user_id,
            </if>
            <if test="inviteType != null">
                invite_type,
            </if>
            <if test="activityCode != null" >
                activity_code,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="updator != null">
                updator,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="parentUserId != null">
                #{parentUserId,jdbcType=BIGINT},
            </if>
            <if test="inviteType != null">
                #{inviteType,jdbcType=INTEGER},
            </if>
            <if test="activityCode != null" >
                #{activityCode,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updator != null">
                #{updator,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.zhishush.finance.core.dal.dataobject.user.UserInviteInfoDO">
        update finance_user_invite_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="parentUserId != null">
                parent_user_id = #{parentUserId,jdbcType=BIGINT},
            </if>
            <if test="inviteType != null">
                invite_type = #{inviteType,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="isPayCoin !=null">
                is_pay_coin = #{isPayCoin}
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updator != null">
                updator = #{updator,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByParentIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        where parent_user_id in
        <foreach item="parentUserId" collection="parentIds" open="(" close=")" separator=",">
            #{parentUserId,jdbcType=BIGINT}
        </foreach>
        <if test="beginTime!=null and beginTime!=''">
            and create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
        </if>
        order by id desc
        <include refid="base.limit"/>
    </select>

    <select id="selectCountByParentId" resultType="java.lang.Long">
        SELECT
        count(id)
        FROM finance_user_invite_info
        where parent_user_id in
        <foreach item="parentUserId" collection="parentIds" open="(" close=")" separator=",">
            #{parentUserId,jdbcType=BIGINT}
        </foreach>
        <if test="beginTime!=null and beginTime!=''">
            and create_time &gt; #{beginTime}
        </if>
    </select>
    <select id="countFirstInviteNum" resultType="java.lang.Long">
        SELECT
        count(id)
        FROM finance_user_invite_info
        where
        invite_type=1
        and parent_user_id in
        <foreach item="parentUserId" collection="parentIds" open="(" close=")" separator=",">
            #{parentUserId,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="selectFirstInviteUsers" resultMap="BaseResultMap">

    </select>
    <select id="selectCountByGrandParentId" resultType="java.lang.Long">
        select count(b.user_id) from finance_user_invite_info a
        join finance_user_invite_info b on a.user_id = b.parent_user_id
        where a.parent_user_id in
        <foreach item="grandParentId" collection="grandParentIds" open="(" close=")" separator=",">
            #{grandParentId,jdbcType=BIGINT}
        </foreach>
        <if test="beginTime!=null and beginTime!=''">
            and b.create_time &gt; #{beginTime}
        </if>
        group by a.parent_user_id
    </select>
    <select id="selectByGrandParentId" resultMap="BaseResultMap">
        select
        a.id,
        a.user_id,
        a.parent_user_id,
        a.invite_type,
        a.is_delete,
        a.is_pay_coin,
        a.creator,
        a.updator,
        a.version,
        a.create_time,
        a.update_time
        from finance_user_invite_info a
        join finance_user_invite_info b on a.user_id = b.parent_user_id
        where a.parent_user_id in
        <foreach item="grandParentId" collection="grandParentIds" open="(" close=")" separator=",">
            #{grandParentId,jdbcType=BIGINT}
        </foreach>
        <if test="beginTime!=null and beginTime!=''">
            and b.create_time &gt; #{beginTime}
        </if>
        order by a.id desc
        <include refid="base.limit"/>
    </select>
    <select id="selectByParentUserIdAndDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        where parent_user_id = #{userId,jdbcType=BIGINT}
        AND is_delete = 0
        AND create_time &gt; #{searchDate,jdbcType=VARCHAR}
        ORDER BY id DESC
        LIMIT 1
    </select>
    <resultMap id="InviteOrdersResultMap" type="cn.zhishush.finance.api.model.vo.invite.InviteOrdersVo">
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="num" property="inviteNum" jdbcType="BIGINT"/>
    </resultMap>
    <select id="selectInviteOrders" resultMap="InviteOrdersResultMap">
        select c.parent_user_id user_id,sum(c._count) num from (
        select a.parent_user_id,count(b.user_id) _count from finance_user_invite_info a
        join finance_user_invite_info b on a.user_id = b.parent_user_id
        where b.create_time > DATE_FORMAT(now(),'%Y-%m')
        group by a.parent_user_id

        union all

        select a.parent_user_id,count(a.user_id) _count from finance_user_invite_info a
        where a.create_time > DATE_FORMAT(now(),'%Y-%m')
        group by a.parent_user_id
        ) c group by c.parent_user_id
        order by sum(c._count) DESC ,c.parent_user_id ASC
        <include refid="base.limit"/>
    </select>
    <select id="selectListByType" resultType="java.lang.Long">
        SELECT
        i.user_id
        FROM finance_user_invite_info i RIGHT JOIN finance_third_account_info t
        on i.user_id = t.user_id
        where parent_user_id = #{parentId,jdbcType=BIGINT}
        and invite_type = #{inviteType,jdbcType=INTEGER}
        order by i.id desc
        <include refid="base.limit"/>
    </select>
    <select id="selectOneByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

      <select id="selectOneByParentUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        where parent_user_id = #{parentId,jdbcType=BIGINT}
          order by id asc
          <include refid="base.limit"/>
    </select>


    <select id="selectOneByParentTwoUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        where parent_user_id in (
        select user_id from finance_user_invite_info where parent_user_id = #{parentId,jdbcType=BIGINT}
        );
    </select>

    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM finance_user_invite_info
        <include refid="queryCondition"/>
        order by id desc
        <include refid="base.limit"/>
    </select>
    <select id="count" resultType="int">
        select
        count(1)
        FROM finance_user_invite_info
        <include refid="queryCondition"/>
    </select>
    <select id="countFirstInviteNumByCode" resultType="java.lang.Long">
        SELECT
        count(id)
        FROM finance_user_invite_info
        where
        invite_type=1
        and parent_user_id =#{parentUserId,jdbcType=BIGINT}
        and activity_code= #{activityCode,jdbcType=VARCHAR}
    </select>
    <sql id="queryCondition">
        <trim prefix="where" prefixOverrides="AND| OR">
            <if test="userId !=null">
                and user_id= #{userId}
            </if>
            <if test="userIds != null">
                and user_id in
                <foreach item="userId" collection="userIds" open="(" close=")" separator=",">
                    #{userId,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="parentUserId !=null">
                and parent_user_Id= #{parentUserId}
            </if>
            <if test="parentUserIds != null">
                and parent_user_id in
                <foreach item="parentUserId" collection="parentUserIds" open="(" close=")" separator=",">
                    #{parentUserId,jdbcType=BIGINT}
                </foreach>
            </if>
        </trim>
    </sql>
    <update id="updatePayCoinFlag">
        update finance_user_invite_info set is_pay_coin ='Y' where user_id=#{userId}
    </update>
</mapper>